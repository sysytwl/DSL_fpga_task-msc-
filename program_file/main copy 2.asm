;irs rising edge for timmer
mova 0x0F
opa INC_A
sba 0x80

irs: ;interrupts
mova 0x82; irs flag
sba 0x82
movb 0x0F;0
sbb 0x82;interrupts reset

;mouse data
;x
movb 0x10
sbb 0xB0
movb 0x11
sbb 0xB1
movb 0xA1
sbb 0xB2
sbb 0xD1
sbb 0x01

;y
movb 0x10
sbb 0xB0
movb 0x13
sbb 0xB1
movb 0xA2
sbb 0xB2
sbb 0xD0
sbb 0x02

;status
movb 0xA0
mova 0x03
opb AND ;mask
beq #changecolor
movb 0x10 ;while pointer
sbb 0xB0
movb 0x16
sbb 0xB1
movb 0x06
sbb 0xB2

movb 0x30 ;stop x
sbb 0xB0
movb 0x31
sbb 0xB1
movb 0x34
sbb 0xB2

movb 0x30 ;stop y
sbb 0xB0
movb 0x32
sbb 0xB1
movb 0x34
sbb 0xB2
sbb 0xD0
ret;out of irs

#changecolor:
movb 0x10
sbb 0xB0
movb 0x16
sbb 0xB1
movb 0x05
sbb 0xB2
sbb 0xD1
ret

;x check
mova 0x01
movb 0x20
bgt #xstopback
movb 0x30 ;x forward
sbb 0xB0
movb 0x31
sbb 0xB1
movb 0x33
sbb 0xB2
jal #y

#xstopback:
mova 0x01
movb 0x21
bgt #xback
movb 0x30 ;x stop
sbb 0xB0
movb 0x31
sbb 0xB1
movb 0x34
sbb 0xB2
jal #y

#xback:
movb 0x30 ;x backward
sbb 0xB0
movb 0x31
sbb 0xB1
movb 0x35
sbb 0xB2

#Y:
mova 0x02
movb 0x22
bgt #ystopright
movb 0x30 ;y left
sbb 0xB0
movb 0x32
sbb 0xB1
movb 0x36
sbb 0xB2
ret

#ystopright:
mova 0x02
movb 0x23
bgt #yright
movb 0x30 ;y stop
sbb 0xB0
movb 0x31
sbb 0xB2
movb 0x34
sbb 0xB2
ret

#yright:
movb 0x30 ;y right
sbb 0xB0
movb 0x32
sbb 0xB1
movb 0x37
sbb 0xB2
ret
