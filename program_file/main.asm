;irs rising edge for timmer
mova 0x0F
opa INC_A
sba 0x80

irs: ;interrupts
mova 0x82;irs flag
sba 0x82;interrupts reset
movb 0x0F;0
sbb 0x82;reset reset state

;mouse data
;x
movb 0x10;vga sprite high addr
sbb 0xB0
movb 0x11;low addr
sbb 0xB1
movb 0xA1;data sprite x
sbb 0xB2
sbb 0xD1
sbb 0x00

;y
movb 0x10
sbb 0xB0
movb 0x13
sbb 0xB1
movb 0xA2
sbb 0xB2
sbb 0xD0
sbb 0x01

;status
movb 0xA0;mouse status
mova 0x0F
opa INC_A
opb AND ;mask LSB -> left click
beq #changecolor
mova 0x10;while pointer
sba 0xB0
mova 0x16
sba 0xB1
mova 0x27
sba 0xB2
ret;out of irs

#changecolor:
mova 0x10
sba 0xB0
mova 0x16
sba 0xB1
mova 0x22
sba 0xB2

;x check
mova 0x00;x status
movb 0x06;x left
bgt #xstopback
movb 0x19 ;x left
sbb 0xB0;vga tile high addr
movb 0x1A
sbb 0xB1;low addr
movb 0x1F
sbb 0xB2;left arrow
mova 0x2F;assert right
sba 0x90
mova 0x28;left
sba 0x90
jal #y

#xstopback:
mova 0x00
movb 0x03;x right
bgt #xback
movb 0x19 ;x stop
sbb 0xB0
movb 0x1A
sbb 0xB1
movb 0x1B
sbb 0xB2
mova 0x2F;assert right
sba 0x90
mova 0x23;assert left
sba 0x90
jal #y

#xback:
movb 0x19 ;x right
sbb 0xB0
movb 0x1A
sbb 0xB1
movb 0x1E
sbb 0xB2
mova 0x23;assert left
sba 0x90
mova 0x24; right
sba 0x90

#Y:
mova 0x01
movb 0x04
bgt #ystopright
movb 0x19 ;y forward
sbb 0xB0
mova 0x1A
opa INC_A
sba 0xB1
movb 0x1C
sbb 0xB2
mova 0x2E;assert backward
sba 0x90
mova 0x22;forward
sba 0x90
ret

#ystopright:
mova 0x01
movb 0x05
bgt #yright
movb 0x19 ;y stop
sbb 0xB0
mova 0x1A
opa INC_A
sba 0xB1
movb 0x1B
sbb 0xB2
mova 0x2E;assert backward
sba 0x90
mova 0x2C;assert forward
sba 0x90
ret

#yright:
movb 0x19 ;y backward
sbb 0xB0
mova 0x1A
opa INC_A
sba 0xB1
movb 0x1D
sbb 0xB2
mova 0x2C;assert forward
sba 0x90
mova 0x21;backward
sba 0x90
ret
